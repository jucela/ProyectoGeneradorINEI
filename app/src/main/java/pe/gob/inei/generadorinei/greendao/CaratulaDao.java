package pe.gob.inei.generadorinei.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "CARATULA".
*/
public class CaratulaDao extends AbstractDao<Caratula, Long> {

    public static final String TABLENAME = "CARATULA";

    /**
     * Properties of entity Caratula.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property Anio = new Property(1, String.class, "anio", false, "ANIO");
        public final static Property Mes = new Property(2, String.class, "mes", false, "MES");
        public final static Property Periodo = new Property(3, String.class, "periodo", false, "PERIODO");
        public final static Property Conglomerado = new Property(4, String.class, "conglomerado", false, "CONGLOMERADO");
        public final static Property Nom_dep = new Property(5, String.class, "nom_dep", false, "NOM_DEP");
        public final static Property Nom_prov = new Property(6, String.class, "nom_prov", false, "NOM_PROV");
        public final static Property Nom_dist = new Property(7, String.class, "nom_dist", false, "NOM_DIST");
        public final static Property Nom_ccpp = new Property(8, String.class, "nom_ccpp", false, "NOM_CCPP");
        public final static Property Zona = new Property(9, String.class, "zona", false, "ZONA");
        public final static Property Manzana_id = new Property(10, String.class, "manzana_id", false, "MANZANA_ID");
        public final static Property Vivienda = new Property(11, String.class, "vivienda", false, "VIVIENDA");
        public final static Property Latitud = new Property(12, String.class, "latitud", false, "LATITUD");
        public final static Property Longitud = new Property(13, String.class, "longitud", false, "LONGITUD");
        public final static Property Tipvia = new Property(14, String.class, "tipvia", false, "TIPVIA");
        public final static Property Tipvia_o = new Property(15, String.class, "tipvia_o", false, "TIPVIA_O");
        public final static Property Nomvia = new Property(16, String.class, "nomvia", false, "NOMVIA");
        public final static Property Nropta = new Property(17, String.class, "nropta", false, "NROPTA");
        public final static Property Block = new Property(18, String.class, "block", false, "BLOCK");
        public final static Property Interior = new Property(19, String.class, "interior", false, "INTERIOR");
        public final static Property Piso = new Property(20, String.class, "piso", false, "PISO");
        public final static Property Mza = new Property(21, String.class, "mza", false, "MZA");
        public final static Property Lote = new Property(22, String.class, "lote", false, "LOTE");
        public final static Property Km = new Property(23, String.class, "km", false, "KM");
        public final static Property Telefono = new Property(24, String.class, "telefono", false, "TELEFONO");
        public final static Property T_hogar = new Property(25, String.class, "t_hogar", false, "T_HOGAR");
        public final static Property Usuario = new Property(26, String.class, "usuario", false, "USUARIO");
        public final static Property Cobertura = new Property(27, String.class, "cobertura", false, "COBERTURA");
    }


    public CaratulaDao(DaoConfig config) {
        super(config);
    }
    
    public CaratulaDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"CARATULA\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"ANIO\" TEXT," + // 1: anio
                "\"MES\" TEXT," + // 2: mes
                "\"PERIODO\" TEXT," + // 3: periodo
                "\"CONGLOMERADO\" TEXT," + // 4: conglomerado
                "\"NOM_DEP\" TEXT," + // 5: nom_dep
                "\"NOM_PROV\" TEXT," + // 6: nom_prov
                "\"NOM_DIST\" TEXT," + // 7: nom_dist
                "\"NOM_CCPP\" TEXT," + // 8: nom_ccpp
                "\"ZONA\" TEXT," + // 9: zona
                "\"MANZANA_ID\" TEXT," + // 10: manzana_id
                "\"VIVIENDA\" TEXT," + // 11: vivienda
                "\"LATITUD\" TEXT," + // 12: latitud
                "\"LONGITUD\" TEXT," + // 13: longitud
                "\"TIPVIA\" TEXT," + // 14: tipvia
                "\"TIPVIA_O\" TEXT," + // 15: tipvia_o
                "\"NOMVIA\" TEXT," + // 16: nomvia
                "\"NROPTA\" TEXT," + // 17: nropta
                "\"BLOCK\" TEXT," + // 18: block
                "\"INTERIOR\" TEXT," + // 19: interior
                "\"PISO\" TEXT," + // 20: piso
                "\"MZA\" TEXT," + // 21: mza
                "\"LOTE\" TEXT," + // 22: lote
                "\"KM\" TEXT," + // 23: km
                "\"TELEFONO\" TEXT," + // 24: telefono
                "\"T_HOGAR\" TEXT," + // 25: t_hogar
                "\"USUARIO\" TEXT," + // 26: usuario
                "\"COBERTURA\" TEXT);"); // 27: cobertura
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"CARATULA\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, Caratula entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String anio = entity.getAnio();
        if (anio != null) {
            stmt.bindString(2, anio);
        }
 
        String mes = entity.getMes();
        if (mes != null) {
            stmt.bindString(3, mes);
        }
 
        String periodo = entity.getPeriodo();
        if (periodo != null) {
            stmt.bindString(4, periodo);
        }
 
        String conglomerado = entity.getConglomerado();
        if (conglomerado != null) {
            stmt.bindString(5, conglomerado);
        }
 
        String nom_dep = entity.getNom_dep();
        if (nom_dep != null) {
            stmt.bindString(6, nom_dep);
        }
 
        String nom_prov = entity.getNom_prov();
        if (nom_prov != null) {
            stmt.bindString(7, nom_prov);
        }
 
        String nom_dist = entity.getNom_dist();
        if (nom_dist != null) {
            stmt.bindString(8, nom_dist);
        }
 
        String nom_ccpp = entity.getNom_ccpp();
        if (nom_ccpp != null) {
            stmt.bindString(9, nom_ccpp);
        }
 
        String zona = entity.getZona();
        if (zona != null) {
            stmt.bindString(10, zona);
        }
 
        String manzana_id = entity.getManzana_id();
        if (manzana_id != null) {
            stmt.bindString(11, manzana_id);
        }
 
        String vivienda = entity.getVivienda();
        if (vivienda != null) {
            stmt.bindString(12, vivienda);
        }
 
        String latitud = entity.getLatitud();
        if (latitud != null) {
            stmt.bindString(13, latitud);
        }
 
        String longitud = entity.getLongitud();
        if (longitud != null) {
            stmt.bindString(14, longitud);
        }
 
        String tipvia = entity.getTipvia();
        if (tipvia != null) {
            stmt.bindString(15, tipvia);
        }
 
        String tipvia_o = entity.getTipvia_o();
        if (tipvia_o != null) {
            stmt.bindString(16, tipvia_o);
        }
 
        String nomvia = entity.getNomvia();
        if (nomvia != null) {
            stmt.bindString(17, nomvia);
        }
 
        String nropta = entity.getNropta();
        if (nropta != null) {
            stmt.bindString(18, nropta);
        }
 
        String block = entity.getBlock();
        if (block != null) {
            stmt.bindString(19, block);
        }
 
        String interior = entity.getInterior();
        if (interior != null) {
            stmt.bindString(20, interior);
        }
 
        String piso = entity.getPiso();
        if (piso != null) {
            stmt.bindString(21, piso);
        }
 
        String mza = entity.getMza();
        if (mza != null) {
            stmt.bindString(22, mza);
        }
 
        String lote = entity.getLote();
        if (lote != null) {
            stmt.bindString(23, lote);
        }
 
        String km = entity.getKm();
        if (km != null) {
            stmt.bindString(24, km);
        }
 
        String telefono = entity.getTelefono();
        if (telefono != null) {
            stmt.bindString(25, telefono);
        }
 
        String t_hogar = entity.getT_hogar();
        if (t_hogar != null) {
            stmt.bindString(26, t_hogar);
        }
 
        String usuario = entity.getUsuario();
        if (usuario != null) {
            stmt.bindString(27, usuario);
        }
 
        String cobertura = entity.getCobertura();
        if (cobertura != null) {
            stmt.bindString(28, cobertura);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, Caratula entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String anio = entity.getAnio();
        if (anio != null) {
            stmt.bindString(2, anio);
        }
 
        String mes = entity.getMes();
        if (mes != null) {
            stmt.bindString(3, mes);
        }
 
        String periodo = entity.getPeriodo();
        if (periodo != null) {
            stmt.bindString(4, periodo);
        }
 
        String conglomerado = entity.getConglomerado();
        if (conglomerado != null) {
            stmt.bindString(5, conglomerado);
        }
 
        String nom_dep = entity.getNom_dep();
        if (nom_dep != null) {
            stmt.bindString(6, nom_dep);
        }
 
        String nom_prov = entity.getNom_prov();
        if (nom_prov != null) {
            stmt.bindString(7, nom_prov);
        }
 
        String nom_dist = entity.getNom_dist();
        if (nom_dist != null) {
            stmt.bindString(8, nom_dist);
        }
 
        String nom_ccpp = entity.getNom_ccpp();
        if (nom_ccpp != null) {
            stmt.bindString(9, nom_ccpp);
        }
 
        String zona = entity.getZona();
        if (zona != null) {
            stmt.bindString(10, zona);
        }
 
        String manzana_id = entity.getManzana_id();
        if (manzana_id != null) {
            stmt.bindString(11, manzana_id);
        }
 
        String vivienda = entity.getVivienda();
        if (vivienda != null) {
            stmt.bindString(12, vivienda);
        }
 
        String latitud = entity.getLatitud();
        if (latitud != null) {
            stmt.bindString(13, latitud);
        }
 
        String longitud = entity.getLongitud();
        if (longitud != null) {
            stmt.bindString(14, longitud);
        }
 
        String tipvia = entity.getTipvia();
        if (tipvia != null) {
            stmt.bindString(15, tipvia);
        }
 
        String tipvia_o = entity.getTipvia_o();
        if (tipvia_o != null) {
            stmt.bindString(16, tipvia_o);
        }
 
        String nomvia = entity.getNomvia();
        if (nomvia != null) {
            stmt.bindString(17, nomvia);
        }
 
        String nropta = entity.getNropta();
        if (nropta != null) {
            stmt.bindString(18, nropta);
        }
 
        String block = entity.getBlock();
        if (block != null) {
            stmt.bindString(19, block);
        }
 
        String interior = entity.getInterior();
        if (interior != null) {
            stmt.bindString(20, interior);
        }
 
        String piso = entity.getPiso();
        if (piso != null) {
            stmt.bindString(21, piso);
        }
 
        String mza = entity.getMza();
        if (mza != null) {
            stmt.bindString(22, mza);
        }
 
        String lote = entity.getLote();
        if (lote != null) {
            stmt.bindString(23, lote);
        }
 
        String km = entity.getKm();
        if (km != null) {
            stmt.bindString(24, km);
        }
 
        String telefono = entity.getTelefono();
        if (telefono != null) {
            stmt.bindString(25, telefono);
        }
 
        String t_hogar = entity.getT_hogar();
        if (t_hogar != null) {
            stmt.bindString(26, t_hogar);
        }
 
        String usuario = entity.getUsuario();
        if (usuario != null) {
            stmt.bindString(27, usuario);
        }
 
        String cobertura = entity.getCobertura();
        if (cobertura != null) {
            stmt.bindString(28, cobertura);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public Caratula readEntity(Cursor cursor, int offset) {
        Caratula entity = new Caratula( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // anio
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // mes
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // periodo
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // conglomerado
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // nom_dep
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // nom_prov
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // nom_dist
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // nom_ccpp
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // zona
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // manzana_id
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // vivienda
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // latitud
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // longitud
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // tipvia
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // tipvia_o
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // nomvia
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // nropta
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // block
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // interior
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // piso
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // mza
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // lote
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // km
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // telefono
            cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25), // t_hogar
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // usuario
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27) // cobertura
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, Caratula entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setAnio(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setMes(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setPeriodo(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setConglomerado(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setNom_dep(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setNom_prov(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setNom_dist(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setNom_ccpp(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setZona(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setManzana_id(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setVivienda(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setLatitud(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setLongitud(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setTipvia(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setTipvia_o(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setNomvia(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setNropta(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setBlock(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setInterior(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setPiso(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setMza(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setLote(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setKm(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setTelefono(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setT_hogar(cursor.isNull(offset + 25) ? null : cursor.getString(offset + 25));
        entity.setUsuario(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setCobertura(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(Caratula entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(Caratula entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(Caratula entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
